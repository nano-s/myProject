import streamlit as st
import cv2
import numpy as np
from PIL import Image

st.set_page_config(page_title="UV Hand Analyzer", layout="centered")
st.title("ЁЯЦРя╕П р╕зр╕┤р╣Ар╕Др╕гр╕▓р╕░р╕лр╣Мр╕Ир╕╕р╕Фр╣Ар╕гр╕╖р╕нр╕Зр╣Бр╕кр╕Зр╣Бр╕ер╕░р╕Др╕│р╣Бр╕Щр╕░р╕Щр╕│р╕Бр╕▓р╕гр╕ер╣Йр╕▓р╕Зр╕бр╕╖р╕н")

# р╕нр╕▒р╕Ыр╣Вр╕лр╕ер╕Фр╕ар╕▓р╕Юр╕бр╕╖р╕нр╕Ир╕гр╕┤р╕Зр╣Бр╕ер╕░р╕ар╕▓р╕Юр╣Ар╕кр╣Йр╕Щр╕бр╕╖р╕н
uploaded_file = st.file_uploader("ЁЯУ╖ р╕нр╕▒р╕Ыр╣Вр╕лр╕ер╕Фр╕ар╕▓р╕Юр╕бр╕╖р╕нр╕ар╕▓р╕вр╣Гр╕Хр╣Йр╣Бр╕кр╕З UVA", type=["jpg", "png", "jpeg"])
outline_file = st.file_uploader("тЬПя╕П р╕нр╕▒р╕Ыр╣Вр╕лр╕ер╕Фр╕ар╕▓р╕Юр╣Ар╕кр╣Йр╕Щр╕бр╕╖р╕н (р╕бр╕╖р╕н = р╕Вр╕▓р╕з, р╕Юр╕╖р╣Йр╕Щр╕лр╕ер╕▒р╕З = р╕Фр╕│)", type=["jpg", "png", "jpeg"])

if uploaded_file and outline_file:
    # р╣Вр╕лр╕ер╕Фр╕ар╕▓р╕Юр╕бр╕╖р╕нр╕Ир╕гр╕┤р╕З
    pil_image = Image.open(uploaded_file).convert('RGB')
    image = np.array(pil_image)
    hsv = cv2.cvtColor(image, cv2.COLOR_RGB2HSV)

    # р╣Вр╕лр╕ер╕Фр╕ар╕▓р╕Юр╣Ар╕кр╣Йр╕Щр╕бр╕╖р╕н
    outline_pil = Image.open(outline_file).convert('L')
    hand_outline = np.array(outline_pil)
    _, hand_mask = cv2.threshold(hand_outline, 127, 255, cv2.THRESH_BINARY)
    hand_mask_resized = cv2.resize(hand_mask, (image.shape[1], image.shape[0]))

    # р╕кр╕гр╣Йр╕▓р╕З mask р╣Ар╕гр╕╖р╕нр╕Зр╣Бр╕кр╕З
    lower_fluorescent = np.array([105, 80, 160])
    upper_fluorescent = np.array([130, 255, 255])
    uv_mask = cv2.inRange(hsv, lower_fluorescent, upper_fluorescent)
    glow_mask = cv2.bitwise_and(uv_mask, hand_mask_resized)

    # р╕кр╕гр╣Йр╕▓р╕Зр╣Вр╕Лр╕Щр╕Хр╣Ир╕▓р╕З р╣Ж р╕Ър╕Щр╕бр╕╖р╕н (р╕Ир╕│р╕ер╕нр╕Зр╕Хр╕│р╣Бр╕лр╕Щр╣Ир╕З)
    zones = {
        "р╕Щр╕┤р╣Йр╕зр╕бр╕╖р╕н": cv2.rectangle(np.zeros_like(hand_mask_resized), (100, 0), (400, 200), 255, -1),
        "р╣Ар╕ер╣Зр╕Ъ": cv2.rectangle(np.zeros_like(hand_mask_resized), (100, 0), (400, 50), 255, -1),
        "р╕Эр╣Ир╕▓р╕бр╕╖р╕н": cv2.rectangle(np.zeros_like(hand_mask_resized), (150, 250), (350, 400), 255, -1),
        "р╕Вр╣Йр╕нр╕бр╕╖р╕н": cv2.rectangle(np.zeros_like(hand_mask_resized), (150, 400), (350, 512), 255, -1),
        "р╕Лр╕нр╕Бр╕Щр╕┤р╣Йр╕з": cv2.rectangle(np.zeros_like(hand_mask_resized), (180, 100), (320, 200), 255, -1),
        "р╕лр╕ер╕▒р╕Зр╕бр╕╖р╕н": cv2.rectangle(np.zeros_like(hand_mask_resized), (100, 200), (400, 250), 255, -1),
    }

    # р╕зр╕┤р╣Ар╕Др╕гр╕▓р╕░р╕лр╣Мр╣Бр╕Хр╣Ир╕ер╕░р╣Вр╕Лр╕Щ
    results = {}
    for name, zone_mask in zones.items():
        zone_mask = cv2.resize(zone_mask, (image.shape[1], image.shape[0]))
        zone_area = cv2.countNonZero(zone_mask)
        zone_glow = cv2.countNonZero(cv2.bitwise_and(glow_mask, zone_mask))
        percent = (zone_glow / zone_area) * 100 if zone_area > 0 else 0
        results[name] = percent

    # р╣Бр╕кр╕Фр╕Зр╕ар╕▓р╕Юр╕бр╕╖р╕нр╕Ир╕гр╕┤р╕З
    st.image(pil_image, caption="р╕ар╕▓р╕Юр╕бр╕╖р╕нр╕Ир╕гр╕┤р╕Зр╕Чр╕╡р╣Ир╕нр╕▒р╕Ыр╣Вр╕лр╕ер╕Ф", use_column_width=True)

    # р╣Бр╕кр╕Фр╕Зр╕Ьр╕ер╕Бр╕▓р╕гр╕зр╕┤р╣Ар╕Др╕гр╕▓р╕░р╕лр╣М
    st.markdown("### ЁЯУК р╕Ьр╕ер╕Бр╕▓р╕гр╕зр╕┤р╣Ар╕Др╕гр╕▓р╕░р╕лр╣Мр╣Бр╕Хр╣Ир╕ер╕░р╕Ър╕гр╕┤р╣Ар╕зр╕У")
    for name, percent in results.items():
        st.markdown(f"- **{name}**: {percent:.1f}%")

    # р╕кр╕гр╕╕р╕Ыр╕Др╕│р╣Бр╕Щр╕░р╕Щр╕│
    st.markdown("### ЁЯз╝ р╕Др╕│р╣Бр╕Щр╕░р╕Щр╕│р╣Гр╕Щр╕Бр╕▓р╕гр╕ер╣Йр╕▓р╕Зр╕бр╕╖р╕нр╣Ар╕Юр╕┤р╣Ир╕бр╣Ар╕Хр╕┤р╕б")
    for name, percent in results.items():
        if percent > 10:
            st.markdown(f"ЁЯФ┤ р╕Др╕зр╕гр╕ер╣Йр╕▓р╕Зр╕Ър╕гр╕┤р╣Ар╕зр╕У **{name}** р╣Гр╕лр╣Йр╕кр╕░р╕нр╕▓р╕Фр╕Вр╕╢р╣Йр╕Щ (р╕Юр╕Ър╕кр╕▓р╕гр╣Ар╕гр╕╖р╕нр╕Зр╣Бр╕кр╕З {percent:.1f}%)")
        elif percent > 5:
            st.markdown(f"ЁЯЯа р╕ер╣Йр╕▓р╕Зр╕Ър╕гр╕┤р╣Ар╕зр╕У **{name}** р╣Ар╕Юр╕┤р╣Ир╕бр╣Ар╕Хр╕┤р╕бр╣Ар╕ер╣Зр╕Бр╕Щр╣Йр╕нр╕в ({percent:.1f}%)")
        else:
            st.markdown(f"ЁЯЯв р╕Ър╕гр╕┤р╣Ар╕зр╕У **{name}** р╕кр╕░р╕нр╕▓р╕Фр╕Фр╕╡ ({percent:.1f}%)")

else:
    st.info("р╕Бр╕гр╕╕р╕Ур╕▓р╕нр╕▒р╕Ыр╣Вр╕лр╕ер╕Фр╕ар╕▓р╕Юр╕бр╕╖р╕нр╕ар╕▓р╕вр╣Гр╕Хр╣Йр╣Бр╕кр╕З UVA р╣Бр╕ер╕░р╕ар╕▓р╕Юр╣Ар╕кр╣Йр╕Щр╕бр╕╖р╕нр╣Ар╕Юр╕╖р╣Ир╕нр╣Ар╕гр╕┤р╣Ир╕бр╕зр╕┤р╣Ар╕Др╕гр╕▓р╕░р╕лр╣М")
